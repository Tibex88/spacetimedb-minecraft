// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct GenerateChunkArgs {
    pub x: i32,
    pub z: i32,
}

impl Reducer for GenerateChunkArgs {
    const REDUCER_NAME: &'static str = "generate_chunk";
}

#[allow(unused)]
pub fn generate_chunk(x: i32, z: i32) {
    GenerateChunkArgs { x, z }.invoke();
}

#[allow(unused)]
pub fn on_generate_chunk(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &i32, &i32) + Send + 'static,
) -> ReducerCallbackId<GenerateChunkArgs> {
    GenerateChunkArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let GenerateChunkArgs { x, z } = __args;
        __callback(__identity, __addr, __status, x, z);
    })
}

#[allow(unused)]
pub fn once_on_generate_chunk(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &i32, &i32) + Send + 'static,
) -> ReducerCallbackId<GenerateChunkArgs> {
    GenerateChunkArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let GenerateChunkArgs { x, z } = __args;
        __callback(__identity, __addr, __status, x, z);
    })
}

#[allow(unused)]
pub fn remove_on_generate_chunk(id: ReducerCallbackId<GenerateChunkArgs>) {
    GenerateChunkArgs::remove_on_reducer(id);
}
