// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use super::stdb_in_login_packet::StdbInLoginPacket;
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct StdbHandleLoginArgs {
    pub connection_id: u64,
    pub packet: StdbInLoginPacket,
}

impl Reducer for StdbHandleLoginArgs {
    const REDUCER_NAME: &'static str = "stdb_handle_login";
}

#[allow(unused)]
pub fn stdb_handle_login(connection_id: u64, packet: StdbInLoginPacket) {
    StdbHandleLoginArgs {
        connection_id,
        packet,
    }
    .invoke();
}

#[allow(unused)]
pub fn on_stdb_handle_login(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &u64, &StdbInLoginPacket)
        + Send
        + 'static,
) -> ReducerCallbackId<StdbHandleLoginArgs> {
    StdbHandleLoginArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let StdbHandleLoginArgs {
            connection_id,
            packet,
        } = __args;
        __callback(__identity, __addr, __status, connection_id, packet);
    })
}

#[allow(unused)]
pub fn once_on_stdb_handle_login(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &u64, &StdbInLoginPacket)
        + Send
        + 'static,
) -> ReducerCallbackId<StdbHandleLoginArgs> {
    StdbHandleLoginArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let StdbHandleLoginArgs {
            connection_id,
            packet,
        } = __args;
        __callback(__identity, __addr, __status, connection_id, packet);
    })
}

#[allow(unused)]
pub fn remove_on_stdb_handle_login(id: ReducerCallbackId<StdbHandleLoginArgs>) {
    StdbHandleLoginArgs::remove_on_reducer(id);
}
