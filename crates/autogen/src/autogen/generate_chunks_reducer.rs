// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#[allow(unused)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct GenerateChunksArgs {
    pub from_x: i32,
    pub from_z: i32,
    pub to_x: i32,
    pub to_z: i32,
}

impl Reducer for GenerateChunksArgs {
    const REDUCER_NAME: &'static str = "generate_chunks";
}

#[allow(unused)]
pub fn generate_chunks(from_x: i32, from_z: i32, to_x: i32, to_z: i32) {
    GenerateChunksArgs {
        from_x,
        from_z,
        to_x,
        to_z,
    }
    .invoke();
}

#[allow(unused)]
pub fn on_generate_chunks(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &i32, &i32, &i32, &i32)
        + Send
        + 'static,
) -> ReducerCallbackId<GenerateChunksArgs> {
    GenerateChunksArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let GenerateChunksArgs {
            from_x,
            from_z,
            to_x,
            to_z,
        } = __args;
        __callback(__identity, __addr, __status, from_x, from_z, to_x, to_z);
    })
}

#[allow(unused)]
pub fn once_on_generate_chunks(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &i32, &i32, &i32, &i32)
        + Send
        + 'static,
) -> ReducerCallbackId<GenerateChunksArgs> {
    GenerateChunksArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let GenerateChunksArgs {
            from_x,
            from_z,
            to_x,
            to_z,
        } = __args;
        __callback(__identity, __addr, __status, from_x, from_z, to_x, to_z);
    })
}

#[allow(unused)]
pub fn remove_on_generate_chunks(id: ReducerCallbackId<GenerateChunksArgs>) {
    GenerateChunksArgs::remove_on_reducer(id);
}
