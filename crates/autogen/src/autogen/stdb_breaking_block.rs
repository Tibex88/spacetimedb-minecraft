// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

use super::breaking_block::BreakingBlock;
#[allow(unused)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct StdbBreakingBlock {
    pub entity_id: u32,
    pub state: BreakingBlock,
}

impl TableType for StdbBreakingBlock {
    const TABLE_NAME: &'static str = "StdbBreakingBlock";
    type ReducerEvent = super::ReducerEvent;
}

impl StdbBreakingBlock {
    #[allow(unused)]
    pub fn filter_by_entity_id(entity_id: u32) -> Option<Self> {
        Self::find(|row| row.entity_id == entity_id)
    }
    #[allow(unused)]
    pub fn filter_by_state(state: BreakingBlock) -> TableIter<Self> {
        Self::filter(|row| row.state == state)
    }
}
