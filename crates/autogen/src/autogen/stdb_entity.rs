// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use super::stdb_d_vec_3::StdbDVec3;
use super::stdb_vec_2::StdbVec2;
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct StdbEntity {
    pub entity_id: u32,
    pub world_id: i32,
    pub on_ground: bool,
    pub pos: StdbDVec3,
    pub look: StdbVec2,
    pub dimension: i32,
}

impl TableType for StdbEntity {
    const TABLE_NAME: &'static str = "StdbEntity";
    type ReducerEvent = super::ReducerEvent;
}

impl TableWithPrimaryKey for StdbEntity {
    type PrimaryKey = u32;
    fn primary_key(&self) -> &Self::PrimaryKey {
        &self.entity_id
    }
}

impl StdbEntity {
    #[allow(unused)]
    pub fn filter_by_entity_id(entity_id: u32) -> TableIter<Self> {
        Self::filter(|row| row.entity_id == entity_id)
    }
    #[allow(unused)]
    pub fn find_by_entity_id(entity_id: u32) -> Option<Self> {
        Self::find(|row| row.entity_id == entity_id)
    }
    #[allow(unused)]
    pub fn filter_by_world_id(world_id: i32) -> TableIter<Self> {
        Self::filter(|row| row.world_id == world_id)
    }
    #[allow(unused)]
    pub fn filter_by_on_ground(on_ground: bool) -> TableIter<Self> {
        Self::filter(|row| row.on_ground == on_ground)
    }
    #[allow(unused)]
    pub fn filter_by_dimension(dimension: i32) -> TableIter<Self> {
        Self::filter(|row| row.dimension == dimension)
    }
}
