// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct StdbHandleLostArgs {
    pub connection_id: u64,
    pub lost: bool,
}

impl Reducer for StdbHandleLostArgs {
    const REDUCER_NAME: &'static str = "stdb_handle_lost";
}

#[allow(unused)]
pub fn stdb_handle_lost(connection_id: u64, lost: bool) {
    StdbHandleLostArgs {
        connection_id,
        lost,
    }
    .invoke();
}

#[allow(unused)]
pub fn on_stdb_handle_lost(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &u64, &bool) + Send + 'static,
) -> ReducerCallbackId<StdbHandleLostArgs> {
    StdbHandleLostArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let StdbHandleLostArgs {
            connection_id,
            lost,
        } = __args;
        __callback(__identity, __addr, __status, connection_id, lost);
    })
}

#[allow(unused)]
pub fn once_on_stdb_handle_lost(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &u64, &bool) + Send + 'static,
) -> ReducerCallbackId<StdbHandleLostArgs> {
    StdbHandleLostArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let StdbHandleLostArgs {
            connection_id,
            lost,
        } = __args;
        __callback(__identity, __addr, __status, connection_id, lost);
    })
}

#[allow(unused)]
pub fn remove_on_stdb_handle_lost(id: ReducerCallbackId<StdbHandleLostArgs>) {
    StdbHandleLostArgs::remove_on_reducer(id);
}
