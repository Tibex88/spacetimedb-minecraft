// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use super::weather::Weather;
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct SetWeatherArgs {
    pub new_weather: Weather,
    pub dimension_id: i32,
}

impl Reducer for SetWeatherArgs {
    const REDUCER_NAME: &'static str = "set_weather";
}

#[allow(unused)]
pub fn set_weather(new_weather: Weather, dimension_id: i32) {
    SetWeatherArgs {
        new_weather,
        dimension_id,
    }
    .invoke();
}

#[allow(unused)]
pub fn on_set_weather(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &Weather, &i32) + Send + 'static,
) -> ReducerCallbackId<SetWeatherArgs> {
    SetWeatherArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let SetWeatherArgs {
            new_weather,
            dimension_id,
        } = __args;
        __callback(__identity, __addr, __status, new_weather, dimension_id);
    })
}

#[allow(unused)]
pub fn once_on_set_weather(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &Weather, &i32) + Send + 'static,
) -> ReducerCallbackId<SetWeatherArgs> {
    SetWeatherArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let SetWeatherArgs {
            new_weather,
            dimension_id,
        } = __args;
        __callback(__identity, __addr, __status, new_weather, dimension_id);
    })
}

#[allow(unused)]
pub fn remove_on_set_weather(id: ReducerCallbackId<SetWeatherArgs>) {
    SetWeatherArgs::remove_on_reducer(id);
}
