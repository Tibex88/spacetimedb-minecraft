// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use super::stdb_d_vec_3::StdbDVec3;
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct StdbServerPlayer {
    pub entity_id: u32,
    pub connection_id: u64,
    pub username: String,
    pub spawn_pos: StdbDVec3,
}

impl TableType for StdbServerPlayer {
    const TABLE_NAME: &'static str = "StdbServerPlayer";
    type ReducerEvent = super::ReducerEvent;
}

impl TableWithPrimaryKey for StdbServerPlayer {
    type PrimaryKey = u32;
    fn primary_key(&self) -> &Self::PrimaryKey {
        &self.entity_id
    }
}

impl StdbServerPlayer {
    #[allow(unused)]
    pub fn filter_by_entity_id(entity_id: u32) -> TableIter<Self> {
        Self::filter(|row| row.entity_id == entity_id)
    }
    #[allow(unused)]
    pub fn find_by_entity_id(entity_id: u32) -> Option<Self> {
        Self::find(|row| row.entity_id == entity_id)
    }
    #[allow(unused)]
    pub fn filter_by_connection_id(connection_id: u64) -> TableIter<Self> {
        Self::filter(|row| row.connection_id == connection_id)
    }
    #[allow(unused)]
    pub fn find_by_connection_id(connection_id: u64) -> Option<Self> {
        Self::find(|row| row.connection_id == connection_id)
    }
    #[allow(unused)]
    pub fn filter_by_username(username: String) -> TableIter<Self> {
        Self::filter(|row| row.username == username)
    }
}
